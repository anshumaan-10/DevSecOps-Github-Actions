name: 51 Scan Docker Image

on:
  workflow_dispatch:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

  workflow_call:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ inputs.image-tag }}

jobs:
  container-image-scan:
    name: Container Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker Image
        run: docker pull ${{ env.IMAGE_TAG }}

      # - name: Scan Docker Image
      #   uses: aquasecurity/trivy-action@0.20.0
      #   with:
      #     image-ref: ${{ env.IMAGE_TAG }}  # Use the input image tag dynamically
      #     format: sarif
      #     output: trivy-results.sarif
      #     exit-code: '0'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   if: always()
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: trivy-results.sarif

      - name: Run the Anchore Grype Scan Action
        id: anchore-scan
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.IMAGE_TAG }}
          fail-build: false
          # only-fixed: true
          # by-cve: true
          
          # Remove unsupported options; use valid inputs as per documentation
          # output-format: 'sarif'  # Specify the output format if necessary
          # severity-cutoff: 'low'  # Set your severity cutoff
          
      - name: Upload Anchore Scan SARIF Report
        if: steps.anchore-scan.outputs.sarif-file  # Ensure the output file exists
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.anchore-scan.outputs.sarif-file }}  # Use the correct output variable from the scan
