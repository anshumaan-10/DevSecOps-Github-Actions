name: 51 Scan Docker Image

on:
  workflow_dispatch:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

  workflow_call:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ inputs.image-tag }}

jobs:
  container-image-scan:
    name: Container Image Scan
    runs-on: ubuntu-latest
    steps:
      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pull Docker Image
      - name: Pull Docker Image
        run: docker pull ${{ env.IMAGE_TAG }}

      # Commented Out Steps for Alternative Scanning Tools
      # Uncomment if you want to use Trivy for scanning
      # - name: Scan Docker Image
      #   uses: aquasecurity/trivy-action@0.20.0
      #   with:
      #     image-ref: ${{ env.IMAGE_TAG }}
      #     format: sarif
      #     output: trivy-results.sarif
      #     exit-code: '0'
      #     ignore-unfixed: true
      #     vuln-type: 'os,library'
      #     severity: 'CRITICAL,HIGH'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   if: always()
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: trivy-results.sarif

      # Run the Anchore Grype Scan Action
      # Ensure the options used are valid as per documentation
      # - name: Run the Anchore Grype Scan Action
      #   id: anchore-scan
      #   uses: anchore/scan-action@v3
      #   with:
      #     image: ${{ env.IMAGE_TAG }}
      #     fail-build: false

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Run Docker Scout Scan
      - name: Docker Scout Scan
        uses: docker/scout-action@v1.0.9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          command: quickview,cves
          only-severities: critical,high
          sarif-file: scout-report.sarif
  
      # Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: docker-scout-findings
          path: scout-report.sarif

      # Intros Reset Part
      # The following section resets any configurations or states necessary 
      # to ensure that the environment is clean for the next run.
      # Uncomment and customize according to your needs.
      # - name: Reset Intros
      #   run: |
      #     echo "Resetting intros or configurations..."
      #     # Add your reset commands here
